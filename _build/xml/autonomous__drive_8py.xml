<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="autonomous__drive_8py" kind="file" language="Python">
    <compoundname>autonomous_drive.py</compoundname>
    <innernamespace refid="namespaceautonomous__drive">autonomous_drive</innernamespace>
    <innernamespace refid="namespacestd__srvs_1_1srv">std_srvs::srv</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceautonomous__drive" refkind="compound"><highlight class="comment">#!/usr/bin/python3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">..<sp/>module::<sp/>autonomous_drive</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:platform:<sp/>Unix</highlight></codeline>
<codeline lineno="7"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>:synopsis:<sp/>Python<sp/>module<sp/>for<sp/>autonomous_drive<sp/>mode.</highlight></codeline>
<codeline lineno="8"><highlight class="stringliteral">..<sp/>moduleauthor::<sp/>Ankur<sp/>Kohli</highlight></codeline>
<codeline lineno="9"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="10"><highlight class="stringliteral">Action<sp/>client:</highlight></codeline>
<codeline lineno="11"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>/move_base</highlight></codeline>
<codeline lineno="12"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="13"><highlight class="stringliteral">This<sp/>node<sp/>is<sp/>called<sp/>the<sp/>autonomous_driving<sp/>node<sp/>that<sp/>allows<sp/>the<sp/>robot<sp/>to<sp/>reach<sp/>a<sp/>specified<sp/>position<sp/>provided<sp/>by<sp/>user.</highlight></codeline>
<codeline lineno="14"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="15"><highlight class="stringliteral">Regarding<sp/>on<sp/>the<sp/>input<sp/>of<sp/>the<sp/>user,<sp/>those<sp/>inputs<sp/>will<sp/>be<sp/>sent<sp/>as<sp/>a<sp/>goal<sp/>to<sp/>the<sp/>action<sp/>server<sp/>/move_base.<sp/></highlight></codeline>
<codeline lineno="16"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="17"><highlight class="stringliteral">During<sp/>the<sp/>movement,<sp/>the<sp/>robot<sp/>sends<sp/>feedback<sp/>regarding<sp/>status<sp/>of<sp/>the<sp/>goal<sp/>either<sp/>reached<sp/>or<sp/>cancelled<sp/>with<sp/>publishers<sp/>like<sp/>/move_base/goal<sp/>or<sp/>/move_base/cancel<sp/>respectively.<sp/>The<sp/>robot<sp/>can<sp/>create<sp/>a<sp/>map<sp/>with<sp/>help<sp/>of<sp/>gmapping.<sp/>User<sp/>is<sp/>also<sp/>able</highlight></codeline>
<codeline lineno="18"><highlight class="stringliteral">to<sp/>cancel<sp/>the<sp/>goal,<sp/>and<sp/>provide<sp/>a<sp/>new<sp/>one.<sp/></highlight></codeline>
<codeline lineno="19"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="20"><highlight class="stringliteral">Subscribes<sp/>to:</highlight></codeline>
<codeline lineno="21"><highlight class="stringliteral"><sp/>/nav_msgs/odometry<sp/>topic<sp/>where<sp/>the<sp/>simulator<sp/>publishes<sp/>the<sp/>robot<sp/>position.</highlight></codeline>
<codeline lineno="22"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral">Action:</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/>MoveBaseAction</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/>MoveBaseGoal</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral">The<sp/>Action<sp/>Client-Service<sp/>communicate<sp/>via<sp/>a<sp/>&quot;ROS<sp/>Action<sp/>Protocol&quot;,<sp/>which<sp/>is<sp/>built<sp/>on<sp/>top<sp/>of<sp/>ROS<sp/>messages.<sp/>The<sp/>client<sp/>and<sp/>server<sp/>then<sp/>provide<sp/>a<sp/>simple<sp/>API<sp/>for<sp/>users<sp/>to<sp/>request<sp/>goals<sp/>(on<sp/>the<sp/>client<sp/>side)<sp/>or<sp/>to<sp/>execute<sp/>goals<sp/>(on<sp/>the<sp/>server<sp/>side)<sp/>via<sp/>function<sp/>calls<sp/>and<sp/>callbacks.<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral">Through<sp/>out<sp/>the<sp/>coding<sp/>of<sp/>this<sp/>node<sp/>I<sp/>implemented<sp/>only<sp/>the<sp/>*Actionclient*<sp/>side<sp/>of<sp/>the<sp/>whole<sp/>structure<sp/>using<sp/>the<sp/>already<sp/>existing<sp/>server<sp/>of<sp/>the<sp/>following<sp/>action<sp/>messages:</highlight></codeline>
<codeline lineno="30"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral">*<sp/>``MoveBaseAction``</highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral">*<sp/>``MoveBaseGoal``</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/></highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral">The<sp/>Actionlib<sp/>feature,<sp/>an<sp/>ActionServer<sp/>receives<sp/>the<sp/>goal<sp/>message<sp/>from<sp/>an<sp/>ActionClient.<sp/>In<sp/>the<sp/>case<sp/>of<sp/>this<sp/>assignment,<sp/>the<sp/>goal<sp/>is<sp/>to<sp/>move<sp/>the<sp/>robot&apos;s<sp/>base<sp/>position.<sp/>The<sp/>goal<sp/>would<sp/>be<sp/>a<sp/>MoveBaseGoal<sp/>message<sp/>that<sp/>contains<sp/>information<sp/>about<sp/>where<sp/>the<sp/>robot<sp/>should<sp/>move<sp/>to<sp/>in<sp/>the<sp/>world.<sp/>For<sp/>controlling<sp/>all<sp/>the<sp/>robot<sp/>positions<sp/>in<sp/>space,<sp/>the<sp/>goal<sp/>would<sp/>contain<sp/>the<sp/>*target_pose*<sp/>parameters<sp/>(stamp,<sp/>orientation,<sp/>target<sp/>position,<sp/>etc).</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>importing<sp/>required<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>actionlib</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>move_base_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MoveBaseAction,<sp/>MoveBaseGoal</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>geometry_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Twist,<sp/>Point</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>nav_msgs.msg<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Odometry</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>tf<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>transformations</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespacestd__srvs_1_1srv" kindref="compound">std_srvs.srv</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>rospy</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">#for<sp/>present<sp/>node<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">state=</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">#<sp/>uses<sp/>a<sp/>flag<sp/>to<sp/>remember<sp/>something<sp/>or<sp/>to<sp/>leave<sp/>a<sp/>sign<sp/>for<sp/>another<sp/>program</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">goalf<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;this<sp/>function<sp/>will<sp/>refresh<sp/>the<sp/>parameters<sp/>continously<sp/>and<sp/>assigning<sp/>their<sp/>updated<sp/>value<sp/>to<sp/>the<sp/>gloabal<sp/>varaibles&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1adb1a4401abc25d9f39a9c756f0e5ba4e" kindref="member">refresh_variables</ref>():<sp/></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>gloabal<sp/>keyword<sp/>allows<sp/>us<sp/>to<sp/>modify<sp/>the<sp/>variable<sp/>outside<sp/>of<sp/>the<sp/>current<sp/>scope.<sp/>It<sp/>is<sp/></highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>used<sp/>to<sp/>create<sp/>a<sp/>global<sp/>variable<sp/>and<sp/>make<sp/><sp/><sp/>changes<sp/>to<sp/>the<sp/>variable<sp/>in<sp/>a<sp/>local<sp/>context.</highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>Args<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>Returns</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>desired_position_x,<sp/>desired_position_y,<sp/>active_</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>active_<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_position_x<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;des_pos_x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_position_y<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;des_pos_y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral">CallBack_odometry<sp/>function<sp/>callback&apos;s<sp/>to<sp/>the<sp/>topic<sp/>odom<sp/>(odometry)<sp/>which<sp/>is<sp/>required<sp/>to<sp/>recover<sp/>the<sp/>present<sp/>of<sp/>the<sp/>robot<sp/>in<sp/>the<sp/>environment<sp/>in<sp/>terms<sp/>of<sp/>x<sp/>and<sp/>y.<sp/>Also,<sp/>the<sp/>information<sp/>about<sp/>the<sp/>odom<sp/>of<sp/>the<sp/>robot<sp/>is<sp/>allocated<sp/>to<sp/>gloabl<sp/>position_<sp/>variable.</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1a02054103f62ea784d400cb4060dff703" kindref="member">CallBack_odometry</ref>(msg):<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Here,<sp/>the<sp/>arguement<sp/>msg<sp/>(/odom.msg):<sp/>this<sp/>will<sp/>hold<sp/>the<sp/>present<sp/>position<sp/>of<sp/>the<sp/>robot<sp/>in</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>enviroment<sp/>in<sp/>the<sp/>terms<sp/>of<sp/>x<sp/>and<sp/>y</highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>msg<sp/>(/odom.msg):<sp/>this<sp/>variable<sp/>will<sp/>contain<sp/>the<sp/>current<sp/>x/y<sp/>position<sp/>of<sp/>the<sp/>robot<sp/>in</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>the<sp/>enviroment.</highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>No<sp/>Returns</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>position_</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>position_<sp/>=<sp/>msg.pose.pose.position</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral">This<sp/>CallBack<sp/>function<sp/>is<sp/>to<sp/>recover<sp/>the<sp/>information<sp/>about<sp/>the<sp/>condition<sp/>of<sp/>the<sp/>robot&apos;s<sp/>position<sp/>once<sp/>it<sp/>reached<sp/>at<sp/>the<sp/>goal<sp/>position.<sp/>Moreover,<sp/>robot<sp/>will<sp/>reached<sp/>at<sp/>the<sp/>goal<sp/>then<sp/>the<sp/>target_flag<sp/>variable<sp/>will<sp/>change<sp/>it&apos;s<sp/>value<sp/>from<sp/>0<sp/>to<sp/>1.<sp/>This<sp/>change<sp/>will<sp/>set<sp/>to<sp/>the<sp/>idle<sp/>state<sp/>operation<sp/>of<sp/>the<sp/>robot<sp/>behaviour.</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1a01c053da76775a7077ac3fa02610ab6a" kindref="member">CallBack</ref>(status,result):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments<sp/>status<sp/>and<sp/>result<sp/>states<sp/>that<sp/>actionlib_goalStatus<sp/>and<sp/>MoveBaseResult</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>status<sp/>(actionlib_goalStatus):<sp/>integer<sp/>code<sp/>corrisponding<sp/>to<sp/>the<sp/>terminal<sp/>state.</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>result<sp/>(MoveBaseResult):<sp/>result<sp/>of<sp/>the<sp/>goal<sp/>processing.</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>Returns</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>goalf</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>status<sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;<sp/>Goal<sp/>Succeeded!&quot;</highlight><highlight class="normal">+state)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goalf<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral">This<sp/>function<sp/>is<sp/>used<sp/>to<sp/>define<sp/>a<sp/>new<sp/>goal<sp/>for<sp/>the<sp/>robot<sp/>through<sp/>&quot;action<sp/>client&quot;.<sp/>Additionally,<sp/>ROS<sp/>Actions<sp/>have<sp/>a<sp/>client-to-server<sp/>communication<sp/>relationship<sp/>with<sp/>a<sp/>specified<sp/>protocol.<sp/>The<sp/>actions<sp/>use<sp/>ROS<sp/>topics<sp/>to<sp/>send<sp/>goal<sp/>messages<sp/>from<sp/>a<sp/>client<sp/>to<sp/>the<sp/>server.<sp/>We<sp/>can<sp/>also<sp/>cancel<sp/>goals<sp/>using<sp/>the<sp/>action<sp/>client.<sp/>After<sp/>receiving<sp/>a<sp/>goal,<sp/>the<sp/>server<sp/>processes<sp/>it<sp/>and<sp/>can<sp/>give<sp/>information<sp/>back<sp/>to<sp/>the<sp/>client.</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1ad596380351193894e48f76137469503a" kindref="member">action_client_set_goal</ref>():</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>function<sp/>will<sp/>set<sp/>the<sp/>goal</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>Args<sp/></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>returns</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.pose.position.x<sp/>=<sp/>desired_position_x</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.pose.position.y<sp/>=<sp/>desired_position_y</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;AUTONOMOUS<sp/>DRIVING<sp/>STATE<sp/>INITIATED&quot;</highlight><highlight class="normal">+state)<sp/></highlight><highlight class="comment">#<sp/>send_goal<sp/>function<sp/>will<sp/>activated<sp/>and<sp/>keep<sp/>tracing<sp/>of<sp/>the<sp/>robot<sp/>target<sp/>through<sp/>&quot;CallBack&quot;<sp/>function.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>client.send_goal(goal,CallBack)<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral">This<sp/>function<sp/>will<sp/>initialize<sp/>the<sp/>&quot;action<sp/>client&quot;.<sp/>Also,<sp/>action<sp/>server<sp/>will<sp/>receive<sp/>goal<sp/>message<sp/>through<sp/>action<sp/>client.</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">action_client_init():</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>client<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>goal</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action<sp/>client<sp/>is<sp/>initialized<sp/>and<sp/>created<sp/>the<sp/>SimpleActionClient,<sp/>passing<sp/>the<sp/>type<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>action</highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>client<sp/>=<sp/>actionlib.SimpleActionClient(</highlight><highlight class="stringliteral">&apos;move_base&apos;</highlight><highlight class="normal">,MoveBaseAction)<sp/></highlight><highlight class="comment">#<sp/>actionlib<sp/>package<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#provides<sp/>a<sp/>standardized<sp/>interface<sp/>for<sp/>interfacing<sp/>with<sp/>preemptible<sp/>tasks.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>client.wait_for_server()<sp/></highlight><highlight class="comment">#<sp/>Waits<sp/>until<sp/>the<sp/>action<sp/>server<sp/>has<sp/>started<sp/>up<sp/>and<sp/>started<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#istening<sp/>for<sp/>goals.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Here,<sp/>MoveBaseGoal<sp/>is<sp/>a<sp/>goal<sp/>message<sp/>type<sp/>and<sp/>this<sp/>will<sp/>contains<sp/>all<sp/>the<sp/>data<sp/>about<sp/>the<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>robot<sp/>behaviour<sp/>while<sp/>reaching<sp/>at<sp/>the<sp/>defined<sp/>goal</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>goal<sp/>=<sp/>MoveBaseGoal()<sp/></highlight><highlight class="comment">#<sp/>goal<sp/>messages<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#we&apos;ll<sp/>send<sp/>a<sp/>goal<sp/>to<sp/>the<sp/>robot<sp/>to<sp/>move<sp/>forward<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.header.frame_id<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;map&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>goal<sp/>message<sp/>set</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>goal.target_pose.header.stamp<sp/>=<sp/>rospy.Time.now()</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#goal.target_pose.pose.orientation.w<sp/>=<sp/>1.0<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">#This<sp/>function<sp/>will<sp/>sets<sp/>the<sp/>reset<sp/>for<sp/>present<sp/>robot&apos;s<sp/>behaviour.<sp/>Furthermore,<sp/>this<sp/>function<sp/>#will<sp/>activates<sp/>only<sp/>when<sp/>the<sp/>robot<sp/>will<sp/>not<sp/>reach<sp/>to<sp/>the<sp/>defined<sp/>target<sp/>within<sp/>a<sp/>limited<sp/>span<sp/>#of<sp/>time<sp/>lets<sp/>say<sp/>40<sp/>seconds.<sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1a05a14c4ae40dffe61826b28e5461cecd" kindref="member">CallBack_reset</ref>(event):</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>event<sp/>is<sp/>time<sp/>variable</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>active_<sp/>is<sp/>the<sp/>parameter<sp/>which<sp/>will<sp/>set<sp/>to<sp/>0<sp/>and<sp/>this<sp/>resets<sp/>whole<sp/>state<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>operations</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Args:</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/>event<sp/>(float)<sp/>:<sp/>for<sp/>time<sp/>variable<sp/></highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>Returns</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>active_==1:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&quot;Gol<sp/>time<sp/>exceeded<sp/>:&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(event.current_real)+state)</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;ROBOT<sp/>failed<sp/>to<sp/>reach<sp/>the<sp/>defined<sp/>target<sp/>location<sp/>within<sp/>a<sp/>span<sp/>of<sp/>40<sp/>seconds&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setting<sp/>parameters<sp/>on<sp/>the<sp/>parameters<sp/>server</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.set_param(</highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">,<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral">main()<sp/>is<sp/>the<sp/>the<sp/>point<sp/>of<sp/>execution<sp/>to<sp/>perform<sp/>operations</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceautonomous__drive_1a28d8f673172c80c30feab545f47e5972" kindref="member">main</ref>():</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="178"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>In<sp/>main(),<sp/>robot&apos;s<sp/>behaviour<sp/>will<sp/>constantly<sp/>supervised.<sp/>While<sp/>loop<sp/>will<sp/>start<sp/>spin<sp/></highlight></codeline>
<codeline lineno="179"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>right<sp/>away<sp/>when<sp/>the<sp/>CallBack<sp/>function<sp/>subscribed<sp/>and<sp/>the<sp/>node<sp/>is<sp/>initialized.<sp/>During<sp/>the<sp/></highlight></codeline>
<codeline lineno="180"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>loop<sp/>execution<sp/>node<sp/>will<sp/>call<sp/>the<sp/>last<sp/>defined<sp/>functions<sp/>as<sp/>per<sp/>the<sp/>present<sp/>state<sp/>of<sp/>the<sp/></highlight></codeline>
<codeline lineno="181"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>robot<sp/>defined<sp/>by<sp/>the<sp/>user<sp/>using<sp/>global<sp/>parameters<sp/>variables.<sp/>Lastly,<sp/>it<sp/>will<sp/>display<sp/>the<sp/></highlight></codeline>
<codeline lineno="182"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>excution<sp/>states<sp/>as<sp/>well.</highlight></codeline>
<codeline lineno="183"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="184"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Fetching<sp/>the<sp/>values<sp/>from<sp/>the<sp/>Parameter<sp/>Server.<sp/>We<sp/>can<sp/>also<sp/>optionally<sp/>pass<sp/>in<sp/>a<sp/>default<sp/></highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>value<sp/>to<sp/>use<sp/>if<sp/>the<sp/>parameter<sp/>is<sp/>not<sp/>set</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>No<sp/>returns</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>active_<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;active&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>parameter<sp/>will<sp/>continously<sp/>supervise<sp/>the<sp/>current<sp/>robot&apos;s<sp/>operatio</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_position_x<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;des_pos_x&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>parameter<sp/>will<sp/>fetch<sp/>the<sp/>x<sp/>coordinate<sp/>of<sp/>the<sp/>target<sp/>position<sp/>which<sp/>is<sp/>entered<sp/>by<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>user</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>desired_position_y<sp/>=<sp/>rospy.get_param(</highlight><highlight class="stringliteral">&apos;des_pos_y&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>parameter<sp/>will<sp/>fetch<sp/>the<sp/>y<sp/>coordinate<sp/>of<sp/>the<sp/>target<sp/>position<sp/>which<sp/>is<sp/>entered<sp/>by<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">global</highlight><highlight class="normal"><sp/>goalf</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>rospy.init_node(</highlight><highlight class="stringliteral">&apos;go_to_desired_pos&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="comment">#<sp/>node<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>sub_odom<sp/>=<sp/>rospy.Subscriber(</highlight><highlight class="stringliteral">&apos;/odom&apos;</highlight><highlight class="normal">,<sp/>Odometry,<sp/>CallBack_odometry)<sp/></highlight><highlight class="comment">#<sp/>Odometry<sp/>CallBack<sp/>is<sp/>subscribed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/></highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>subscriber<sp/>can<sp/>get<sp/>access<sp/>to<sp/>a<sp/>&quot;connection<sp/>header&quot;,<sp/>which<sp/>includes<sp/>debugging<sp/>information<sp/></highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>such<sp/>as<sp/>who<sp/>sent<sp/>the<sp/>message,<sp/>as<sp/>well<sp/>information<sp/>like<sp/>whether<sp/>or<sp/>not<sp/>a<sp/>message<sp/>was<sp/></highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>latched.</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Another,<sp/>convenience<sp/>class<sp/>which<sp/>makes<sp/>a<sp/>best<sp/>effort<sp/>at<sp/>maintaining<sp/>a<sp/>particular<sp/>rate<sp/></highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>a<sp/>loop.</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Also,<sp/>Flags<sp/>are<sp/>declared<sp/>to<sp/>supervised<sp/>present<sp/>robot&apos;s<sp/>operations.</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>rate<sp/>=<sp/>rospy.Rate(10)<sp/></highlight><highlight class="comment">#<sp/>Loop<sp/>sleep<sp/>rate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>f1<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>f2<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>action_client_init()<sp/></highlight><highlight class="comment">#<sp/>action<sp/>client<sp/>is<sp/>initialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0<sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>store<sp/>and<sp/>print<sp/>Robot&apos;s<sp/>behaviour<sp/>and<sp/>its<sp/>state</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>while(1):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceautonomous__drive_1adb1a4401abc25d9f39a9c756f0e5ba4e" kindref="member">refresh_variables</ref>()<sp/></highlight><highlight class="comment">#<sp/>refreshing<sp/>vaiables<sp/>after<sp/>every<sp/>loop<sp/>cycle.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#If<sp/>the<sp/>active_<sp/>paramter<sp/>is<sp/>set<sp/>by<sp/>the<sp/>user<sp/>to<sp/>1,<sp/>the<sp/>node<sp/>will<sp/>get<sp/>to<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#active<sp/>state.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>active_<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>actio_client_set_goal()<sp/></highlight><highlight class="comment">#<sp/>The<sp/>new<sp/>goal<sp/>position<sp/>will<sp/>be<sp/>set.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ROS<sp/>has<sp/>builtin<sp/>time<sp/>and<sp/>duration<sp/>primitive<sp/>types,<sp/>which<sp/>rospy<sp/>provides<sp/>as<sp/>the<sp/>rospy.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rospy.Timer(rospy.Duration(40),<sp/>CallBack_reset)<sp/></highlight><highlight class="comment">#<sp/>reset<sp/>functio<sp/>will<sp/>initiated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>idle<sp/>state<sp/>of<sp/>the<sp/>robot<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f1<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>f2<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;OPERATION<sp/>1:<sp/>Autonomously<sp/>driving<sp/>is<sp/>STOPEED&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>f1<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>f2<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>checking<sp/>whether<sp/>robot<sp/>reached<sp/>at<sp/>target<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>goalf<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/>If<sp/>the<sp/>goal<sp/>is<sp/>reached<sp/>and<sp/>then<sp/>the<sp/>operation<sp/>1<sp/>is<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;OPERATION<sp/>1:<sp/>Autonomously<sp/>driving<sp/>is<sp/>STOPEED&quot;</highlight><highlight class="normal">+state)</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goalf<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">#If<sp/>the<sp/>robot&apos;s<sp/>failed<sp/>to<sp/>reached<sp/>at<sp/>the<sp/>target<sp/>position<sp/>when<sp/>the<sp/>user<sp/>initiated<sp/>the<sp/>robot&apos;s<sp/>#operations<sp/>or<sp/>else<sp/>the<sp/>time<sp/>is<sp/>exceeded.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;TIME<sp/>EXCEEDED,<sp/>ROBOT<sp/>FAILED<sp/>TO<sp/>RAH<sp/>THE<sp/>TARGET<sp/>&amp;<sp/>OPERATION<sp/>1<sp/>STOPEED!!<sp/>&quot;</highlight><highlight class="normal">+state)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>client.cancel_goal()</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f1<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f2<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>present<sp/>robot<sp/>position<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(i<sp/>%<sp/>10<sp/>==<sp/>0):</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;X-Coordinate<sp/>&quot;</highlight><highlight class="normal">+<sp/>str(position_.x)+<sp/></highlight><highlight class="stringliteral">&quot;Y-Coordinate&quot;</highlight><highlight class="normal"><sp/>+<sp/>str(position_.y),<sp/>end<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;\r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>i+1</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>rate.sleep()<sp/></highlight><highlight class="comment">#<sp/>rate.sleep()<sp/>will<sp/>dynamically<sp/>choose<sp/>the<sp/>correct<sp/>amount<sp/>of<sp/>time<sp/>to<sp/>sleep<sp/>to<sp/>respect<sp/>the<sp/>given<sp/>frequency.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="comment">#this<sp/>is<sp/>used<sp/>to<sp/>execute<sp/>some<sp/>code<sp/>only<sp/>if<sp/>the<sp/>file<sp/>was<sp/>run<sp/>directly,<sp/>and<sp/>not<sp/>imported.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceautonomous__drive_1a28d8f673172c80c30feab545f47e5972" kindref="member">main</ref>()<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="scripts/autonomous_drive.py"/>
  </compounddef>
</doxygen>
